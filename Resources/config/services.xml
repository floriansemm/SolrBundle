<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="solr.class">FS\SolrBundle\Solr</parameter>
    </parameters>

    <services>
        <service id="solr.client" class="%solr.class%" public="true">
            <argument type="service" id="solr.client.adapter"/>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="solr.meta.information.factory"/>
            <argument type="service" id="solr.doctrine.entity_mapper"/>
        </service>

        <service id="solr.client.adapter" class="Solarium\Client">
            <factory service="solr.client.adapter.builder" method="build" />
        </service>

        <service id="solr.client.adapter.builder" class="FS\SolrBundle\Client\Solarium\SolariumClientBuilder">
            <argument type="collection"/>
            <argument type="service" id="event_dispatcher" />
        </service>

        <service id="solr.client.plugin.logger" class="FS\SolrBundle\Client\Solarium\Plugin\LoggerPlugin">
            <argument type="service" id="solr.client.logger.debug"/>

            <tag name="solarium.client.plugin" plugin-name="SolrBundleLogger"/>
        </service>

        <service id="solr.client.logger.debug" class="FS\SolrBundle\Logging\DebugLogger" />

        <service id="solr.data_collector" class="FS\SolrBundle\DataCollector\RequestCollector" public="false">
            <argument type="service" id="solr.client.logger.debug" />

            <tag name="data_collector" template="@FSSolr/Profiler/solr.html.twig" id="solr" />
        </service>

        <service id="solr.debug.client_debugger" class="FS\SolrBundle\Client\Solarium\Plugin\RequestDebugger">
            <argument type="service" id="logger"/>

            <tag name="monolog.logger" channel="solr" />
            <tag name="kernel.event_listener" event="solarium.core.preExecuteRequest" method="preExecuteRequest" />
        </service>

        <service id="solr.meta.information.factory" class="FS\SolrBundle\Doctrine\Mapper\MetaInformationFactory" public="true">
            <argument type="service" id="solr.doctrine.annotation.annotation_reader" />
        </service>

        <service id="solr.doctrine.classnameresolver.known_entity_namespaces" class="FS\SolrBundle\Doctrine\ClassnameResolver\KnownNamespaceAliases" public="true"/>

        <service id="solr.doctrine.classnameresolver" class="FS\SolrBundle\Doctrine\ClassnameResolver\ClassnameResolver" public="false">
            <argument type="service" id="solr.doctrine.classnameresolver.known_entity_namespaces"/>
        </service>

        <service id="solr.doctrine.entity_mapper" class="FS\SolrBundle\Doctrine\Mapper\EntityMapper">
            <argument id="solr.doctrine.hydration.doctrine_hydrator" type="service"/>
            <argument id="solr.doctrine.hydration.index_hydrator" type="service"/>
            <argument type="service" id="solr.meta.information.factory"/>
        </service>

        <service id="solr.doctrine.hydration.doctrine_hydrator" class="FS\SolrBundle\Doctrine\Hydration\DoctrineHydrator">
            <argument id="solr.doctrine.hydration.doctrine_value_hydrator" type="service"/>

            <factory service="fs_solr.doctrine_hydration.doctrine_hydrator_factory" method="factory" />
        </service>

        <service class="FS\SolrBundle\Doctrine\Hydration\DoctrineHydratorFactory" id="fs_solr.doctrine_hydration.doctrine_hydrator_factory">
            <argument id="service_container" type="service"/>
        </service>

        <service id="solr.doctrine.hydration.value_hydrator" class="FS\SolrBundle\Doctrine\Hydration\ValueHydrator">
        </service>

        <service id="solr.doctrine.hydration.no_database_value_hydrator" class="FS\SolrBundle\Doctrine\Hydration\NoDatabaseValueHydrator">
        </service>

        <service id="solr.doctrine.hydration.doctrine_value_hydrator" class="FS\SolrBundle\Doctrine\Hydration\DoctrineValueHydrator" public="true">
        </service>

        <service id="solr.doctrine.hydration.index_hydrator" class="FS\SolrBundle\Doctrine\Hydration\IndexHydrator">
            <argument id="solr.doctrine.hydration.no_database_value_hydrator" type="service"/>
        </service>

        <service id="solr.doctrine.annotation.annotation_reader" class="FS\SolrBundle\Doctrine\Annotation\AnnotationReader">
            <argument id="annotation_reader" type="service"/>
        </service>

        <service id="solr.command.clear_index_command" class="FS\SolrBundle\Command\ClearIndexCommand">
            <tag name="console.command"/>
        </service>

        <service id="solr.command.show_schema_command" class="FS\SolrBundle\Command\ShowSchemaCommand">
            <tag name="console.command"/>
        </service>

        <service id="solr.command.synchronize_index_command" class="FS\SolrBundle\Command\SynchronizeIndexCommand">
            <tag name="console.command"/>
        </service>
    </services>
</container>
